# Copyright 2020 IBM Corp.
# SPDX-License-Identifier: Apache-2.0

apiVersion: motion.fybrik.io/v1alpha1
kind: BatchTransfer
metadata:
  name: {{ include "fybrik-implicit-copy-batch.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "fybrik-implicit-copy-batch.name" . }}
    helm.sh/chart: {{ include "fybrik-implicit-copy-batch.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
{{ range $key, $val := .Values.labels }}
    {{ $key }}: {{ $val | quote }}
{{ end }}
spec:
{{- if and (.Values.assets) (eq (len .Values.assets) 1) -}}
{{- with $asset := (index .Values.assets 0) }}
  {{- if and ($asset.args) (eq (len $asset.args) 2) -}}
  {{- with index $asset.args 0 }}
  source:
    {{- if index . "connection" "s3" }}
    s3:
      endpoint: {{ .connection.s3.endpoint | quote }}
      bucket: {{ .connection.s3.bucket | quote }}
      objectKey: {{ .connection.s3.object_key | quote }}
      dataFormat: {{ .format | quote }}
      {{- if .vault.read }}
      vault:
{{ toYaml .vault.read | indent 8 }}
      {{ end }}
    {{ end }}
    {{- if index . "connection" "db2" }}
    database:
      table: {{ .connection.db2.table | quote }}
      db2URL: "jdbc:db2://{{ .source.connection.db2.url }}:{{ .source.connection.db2.port }}/{{ .source.connection.db2.database }}:sslConnection={{ .source.connection.db2.ssl }};"
  {{- if .vault.read }}
      vault:
{{ toYaml .vault.read | indent 8 }}
      {{ end }}
  {{ end }}
  {{- end }}
    {{- with index $asset.args 1 }}
  destination:
    {{- if index . "connection" "s3" }}
    s3:
      endpoint: {{ .connection.s3.endpoint | quote }}
      bucket: {{ .connection.s3.bucket | quote }}
      objectKey: {{ .connection.s3.object_key | quote }}
      dataFormat: {{ .format | quote }}
      {{- if .vault.write }}
      vault:
{{ toYaml .vault.write | indent 8 }}
      {{ end }}
    {{ end }}
    {{- if index . "connection" "db2" }}
    database:
      table: {{ .connection.db2.table | quote }}
      db2URL: "jdbc:db2://{{ .connection.db2.url }}:{{ .connection.db2.port }}/{{ .connection.db2.database }}:sslConnection={{ .connection.db2.ssl }};"
    {{- if .vault.write }}
      vault:
{{ toYaml .vault.write | indent 8 }}
      {{ end }}
    {{ end }}

  {{- end }}
  {{- end }}
  {{- if .transformations }}
  transformation:
  {{- $redactColumns := list -}}
  {{- $removeColumns := list -}}
  {{- range .transformations -}}
    {{- if eq .name "RedactAction" -}}
      {{- $redactColumns = .RedactAction.columns -}}
    {{- end -}}
    {{- if eq .name "RemoveAction" -}}
      {{- $removeColumns = .RemoveAction.columns -}}
    {{- end -}}
  {{- end -}}
  {{- if $redactColumns }}
    - action: "RedactColumns"
      name: "redacting columns: {{ $redactColumns }}"
      columns:
        {{- range $redactColumns}}
        - {{ . }}
        {{- end }}
      options:
        redactValue: "XXXXX"
  {{- end }}
  {{- if $removeColumns }}
    - action: "RemoveColumns"
      name: "removing columns: {{ $removeColumns }}"
      columns:
        {{- range $removeColumns}}
        - {{ . }}
        {{- end }}
  {{- end }}
  {{- end }}
  {{- end }}
  {{- else }}
  source:
  destination:
  {{- end }}
  {{ if .Values.image }}
  image: {{ .Values.image | quote }}
  {{ end }}
  {{ if .Values.imagePullPolicy }}
  imagePullPolicy: {{ .Values.imagePullPolicy | quote }}
  {{ end }}
  noFinalizer: {{ .Values.noFinalizer }}
  readDataType: {{ .Values.readDataType | quote}}
  writeDataType: {{ .Values.writeDataType | quote }}
  writeOperation: {{ .Values.writeOperation | quote }}
