# Copyright 2020 IBM Corp.
# SPDX-License-Identifier: Apache-2.0

apiVersion: motion.fybrik.io/v1alpha1
kind: StreamTransfer
metadata:
  name: {{ .Release.Name }}
spec:
{{- if and (.Values.assets) (eq (len .Values.assets) 1) -}}
{{- with (index .Values.assets 0) }}
  source:
    kafka:
      kafkaBrokers: {{ .source.connection.kafka.bootstrap_servers | quote }}
      schemaRegistryURL: {{ .source.connection.kafka.schema_registry | quote }}
      kafkaTopic: {{ .source.connection.kafka.topic_name | quote }}
      dataFormat: {{ .source.format | quote }}
      # user: "demo-consumer" # can be taken from vault
      # password: "" # can be taken from vault
      createSnapshot: false
      sslTruststore: {{ .source.connection.kafka.ssl_truststore | quote }}
      sslTruststoreLocation: /opt/spark/work-dir/ca.p12
      sslTruststorePassword: {{ .source.connection.kafka.ssl_truststore_password | quote }}
      securityProtocol: {{ .source.connection.kafka.security_protocol | quote }}
      saslMechanism: {{ .source.connection.kafka.sasl_mechanism | quote }}
      keyDeserializer: {{ .source.connection.kafka.key_deserializer | quote }}
      valueDeserializer: {{ .source.connection.kafka.value_deserializer | quote }}
      {{ if .source.vault.read }}
      vault:
{{ toYaml .source.vault.read | indent 8 }}
      {{ end }}
  destination:
    s3:
      endpoint: {{ .destination.connection.s3.endpoint | quote }}
      bucket: {{ .destination.connection.s3.bucket | quote}}
      objectKey: {{ .destination.connection.s3.object_key | quote }}
      dataFormat: {{ .destination.format | quote}}
      {{ if .destination.vault.write }}
      vault:
{{ toYaml .destination.vault.write | indent 8 }}
      {{ end }}
  {{- if .transformations }}
  transformation:
  {{- $redactColumns := list -}}
  {{- $removeColumns := list -}}
  {{- range .transformations -}}
    {{- if eq .name "RedactAction" -}}
      {{- $redactColumns = .RedactAction.columns -}}
    {{- end -}}
    {{- if eq .name "RemoveAction" -}}
      {{- $removeColumns = .RemoveAction.columns -}}
    {{- end -}}
  {{- end -}}
  {{- if $redactColumns }}
    - action: "RedactColumns"
      name: "redacting columns: {{ $redactColumns }}"
      columns:
        {{- range $redactColumns}}
        - {{ . }}
        {{- end }}
      options:
        redactValue: "XXXXX"
  {{- end }}
  {{- if $removeColumns }}
    - action: "RemoveColumns"
      name: "removing columns: {{ $removeColumns }}"
      columns:
        {{- range $removeColumns}}
        - {{ . }}
        {{- end }}
  {{- end }}
  {{- end }}
  {{- end }}
  {{- else }}
  source:
  destination:
  {{- end }}
  triggerInterval: "10 seconds"
  {{ if .Values.image }}
  image: {{ .Values.image | quote }}
  {{ end }}
  {{ if .Values.imagePullPolicy }}
  imagePullPolicy: {{ .Values.imagePullPolicy | quote }}
  {{ end }}
  noFinalizer: {{ .Values.noFinalizer }}
  readDataType: {{ .Values.readDataType | quote}}
  writeDataType: {{ .Values.writeDataType | quote }}
  writeOperation: {{ .Values.writeOperation | quote }}
